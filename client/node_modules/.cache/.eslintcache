[{"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\index.js":"1","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\App.js":"2","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\UpdateMovieDetails.js":"3","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\MovieListPage.js":"4","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\SignUpPage.js":"5","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\WishListPage.js":"6","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\AddMoviePage.js":"7","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\UserLoginPage.js":"8","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\VideoPlayerPage.js":"9","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\UserRegPage.js":"10","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\context\\UserContext.js":"11","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\context\\MovieContext.js":"12","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Navbar.js":"13","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\MovieListTable.js":"14","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Users\\WishList.js":"15","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Users\\UserLogin.js":"16","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Movies\\VideoPlayer.js":"17","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Movies\\AddMovie.js":"18","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Users\\UserReg.js":"19","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\api\\MovieList.js":"20"},{"size":255,"mtime":1725553050930,"results":"21","hashOfConfig":"22"},{"size":1418,"mtime":1725553050834,"results":"23","hashOfConfig":"22"},{"size":143,"mtime":1725553051724,"results":"24","hashOfConfig":"22"},{"size":346,"mtime":1725651231482,"results":"25","hashOfConfig":"22"},{"size":1823,"mtime":1725553051608,"results":"26","hashOfConfig":"22"},{"size":180,"mtime":1725553051945,"results":"27","hashOfConfig":"22"},{"size":348,"mtime":1725635444136,"results":"28","hashOfConfig":"22"},{"size":180,"mtime":1725553051778,"results":"29","hashOfConfig":"22"},{"size":280,"mtime":1725553051887,"results":"30","hashOfConfig":"22"},{"size":161,"mtime":1725553051834,"results":"31","hashOfConfig":"22"},{"size":322,"mtime":1725553051431,"results":"32","hashOfConfig":"22"},{"size":331,"mtime":1725553051391,"results":"33","hashOfConfig":"22"},{"size":7810,"mtime":1725660702902,"results":"34","hashOfConfig":"22"},{"size":3115,"mtime":1725660765377,"results":"35","hashOfConfig":"22"},{"size":2203,"mtime":1725553051348,"results":"36","hashOfConfig":"22"},{"size":5470,"mtime":1725660520819,"results":"37","hashOfConfig":"22"},{"size":9648,"mtime":1725646698147,"results":"38","hashOfConfig":"22"},{"size":17507,"mtime":1725645371926,"results":"39","hashOfConfig":"22"},{"size":9121,"mtime":1725635150073,"results":"40","hashOfConfig":"22"},{"size":125,"mtime":1725553050979,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"fxyjs9",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"45"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"45"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\index.js",[],[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\App.js",["113"],[],"import React from \"react\";\nimport AddMoviePage from \"./pages/AddMoviePage\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { MovieListPage } from \"./pages/MovieListPage\";\nimport { UpdateMovieDetails } from \"./pages/UpdateMovieDetails\";\nimport MovieContextProvider from \"./context/MovieContext\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport UserLoginPage from \"./pages/UserLoginPage\";\nimport UserContextProvider from \"./context/UserContext\";\nimport UserRegPage from \"./pages/UserRegPage\";\nimport VideoPlayerPage from \"./pages/VideoPlayerPage\";\nimport WishListPage from \"./pages/WishListPage\";\n\nfunction App() {\n  return (\n    <MovieContextProvider>\n      <UserContextProvider>\n        <div>\n          <BrowserRouter>\n            <Routes>\n              <Route path=\"/mov\" element={<AddMoviePage />} />\n              <Route exact path=\"/\" element={<MovieListPage />} />\n              <Route exact path=\"/update\" element={<UpdateMovieDetails />} />\n              <Route exact path=\"/login\" element={<UserLoginPage />} />\n              <Route exact path=\"/reg\" element={<UserRegPage />} />\n              <Route exact path=\"/video/:id\" element={<VideoPlayerPage />} />\n              <Route exact path=\"/wishlist\" element={<WishListPage />} />\n            </Routes>\n          </BrowserRouter>\n        </div>\n      </UserContextProvider>\n    </MovieContextProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\UpdateMovieDetails.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\MovieListPage.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\SignUpPage.js",["114"],[],"import { Link } from 'react-router-dom';\nimport classes from './SignUpPage.module.css';\n\nfunction SignUpPage() {\n    return (\n        <div className = {classes.total}>\n        <br />\n        {/* <h2 className = {classes.h2}>SIGN IN</h2> */}\n        {/*   */}\n        <form action=\"/home\" className= {classes.form1}>\n            <p>\n                <label><b>Email address</b></label><br/>\n                <input className = {classes.get_input} type=\"text\" name=\"e_mail\" placeholder='Enter e-mail' required />\n            </p>\n            <br />\n            <p>\n                <label><b>Name</b></label><br />\n                <input className= {classes.get_input} type=\"text\" name=\"first_name\" placeholder='Enter your name' required />\n            </p><br />\n            <p>\n                <label><b>Mobile number</b></label><br />\n                <input className= {classes.get_input} type=\"text\" name=\"mobile_number\" placeholder='Enter mobile number' required />\n            </p><br />\n            <p>\n                <label><b>Country</b></label><br />\n                <input className= {classes.get_input} type=\"text\" name=\"country\" placeholder='Enter country' required />\n            </p>\n            <p><br />\n                <label><b>Password</b></label>\n                <br/>\n                <input className = {classes.get_input} type=\"password\" name=\"password\" placeholder='Enter password' required />\n            </p>\n            <br /><br />\n            <p>\n                <button className = {classes.sub_btn} type=\"submit\">Sign Up</button>\n            </p>\n            <footer className = {classes.footer1}>\n            <p>Already have an account? </p>\n            <br />\n            {/* <p><Link to=\"/\">Home</Link>.</p> */}\n        </footer>\n        </form>\n    </div>\n    );\n}\n\nexport default SignUpPage;","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\WishListPage.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\AddMoviePage.js",["115"],[],"import React from \"react\";\nimport AddMovie from \"../components/Movies/AddMovie\";\nimport Navbar from \"../components/Navbar\";\n\nexport default function () {\n  return (\n    <>\n      <div>\n        <Navbar />\n        <div className=\"flex w-full min-h-screen justify-center items-center\">\n          <AddMovie />\n        </div>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\UserLoginPage.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\VideoPlayerPage.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\pages\\UserRegPage.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\context\\UserContext.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\context\\MovieContext.js",[],[],"C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Navbar.js",["116","117","118","119","120"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MovieList from \"../api/MovieList\";\nimport Cookies from \"js-cookie\";\n\nexport default function Navbar() {\n  const nav = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [error, setError] = useState();\n  const [userInfo, setUserInfo] = useState();\n\n  const buttonRef = useRef(null);\n\n  const togglePopover = () => setIsOpen(!isOpen);\n\n  const userCookie = Cookies.get(\"user\");\n  console.log(userCookie);\n\n  if (userCookie) {\n    setUserInfo(JSON.parse(userCookie));\n    console.log(userInfo);\n  }\n\n  const handleLogout = async () => {\n    try {\n      await MovieList.post(\"/logout\");\n    } catch (error) {\n      setError(\"Error logging out\");\n      console.error(error.message);\n    }\n  };\n\n  // const userInfo = getCookie(\"user\");\n  return (\n    <div>\n      <nav class=\"bg-blue-200 border-gray-200 px-2 sm:px-4 py-2.5 rounded dark:bg-gray-800\">\n        <div class=\"container flex flex-wrap justify-between items-center mx-auto\">\n          <a href=\"http://localhost:3000/\" class=\"flex items-center\">\n            <img\n              src=\"https://img.icons8.com/external-flaticons-lineal-color-flat-icons/64/undefined/external-movie-movie-theater-flaticons-lineal-color-flat-icons-7.png\"\n              class=\"mr-3 h-6 sm:h-9\"\n              alt=\"Trailflix Logo\"\n            />\n            <span class=\"self-center text-xl font-semibold whitespace-nowrap dark:text-white\">\n              Trailflix\n            </span>\n          </a>\n          <button\n            data-collapse-toggle=\"mobile-menu\"\n            type=\"button\"\n            class=\"inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\"\n            aria-controls=\"mobile-menu\"\n            aria-expanded=\"false\"\n          >\n            <span class=\"sr-only\">Open main menu</span>\n            <svg\n              class=\"w-6 h-6\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                clip-rule=\"evenodd\"\n              ></path>\n            </svg>\n            <svg\n              class=\"hidden w-6 h-6\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"\n              ></path>\n            </svg>\n          </button>\n          <div class=\"hidden w-full md:block md:w-auto\" id=\"mobile-menu\">\n            <ul class=\"flex flex-col justify-center items-center text-center mt-4 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium\">\n              <li>\n                <a\n                  href=\"http://localhost:3000/\"\n                  class=\"block py-2 pr-4 pl-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white\"\n                  aria-current=\"page\"\n                >\n                  Home\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"http://localhost:3000/mov\"\n                  class=\"block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\"\n                >\n                  Add Movies\n                </a>\n              </li>\n\n              <li>\n                <a\n                  href=\"http://localhost:3000/reg\"\n                  class=\"block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\"\n                >\n                  Register\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"http://localhost:3000/login\"\n                  class=\"block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\"\n                >\n                  Login\n                </a>\n              </li>\n              {/* <li className=\"flex justify-center items-center\">\n                <div className=\"relative inline-block text-left\">\n                  <button\n                    onClick={togglePopover}\n                    ref={buttonRef}\n                    className=\"flex items-center space-x-2 p-2 bg-gray-200 rounded-full\"\n                  >\n                    <img\n                      src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n                      alt=\"Profile\"\n                      className=\"w-6 h-6 rounded-full\"\n                    />\n                  </button>\n\n                  {isOpen && (\n                    <div\n                      className=\"absolute z-10 mt-2 w-72 bg-white border rounded-lg shadow-lg\"\n                      style={{\n                        top: buttonRef.current\n                          ? buttonRef.current.offsetHeight\n                          : 0,\n                        left: buttonRef.current\n                          ? buttonRef.current.offsetWidth / 2 - 96 // Center it by calculating half of the button width minus half of the popover width\n                          : 0,\n                        transform: \"translateX(-50%)\", // Center horizontally\n                        maxWidth: \"calc(100vw - 32px)\", // Flexible width, less restrictive\n                        maxHeight: \"auto\", // Allow flexible height\n                        // overflow: \"hidden\", // Remove scrolling\n                      }}\n                    >\n                      <div className=\"p-4 w-full\">\n                        <div className=\"flex w-full items-center space-x-3\">\n                          <img\n                            src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n                            alt=\"Profile\"\n                            className=\"w-12 h-12 rounded-full\"\n                          />\n                          <div>\n                            <p className=\"font-semibold\">Username</p>\n                            <p className=\"text-gray-600\">email@example.com</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </li> */}\n\n              <li>\n                <button\n                  onClick={handleLogout}\n                  class=\"block py-2 pr-4 pl-3 text-red-500 bg-blue-700 rounded md:bg-transparent md:text-red-700 md:p-0 dark:text-white\"\n                  aria-current=\"page\"\n                >\n                  Logout\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\MovieListTable.js",["121","122","123","124","125","126"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport MovieList from \"../api/MovieList\";\nimport { MovieContext } from \"../context/MovieContext\";\n\nexport default function MovieListTable(props) {\n  const { movies, setMovies } = useContext(MovieContext);\n  const [genre, setGenre] = useState(\"\");\n  const [genreName, setGenreName] = useState([]);\n  let i = 0;\n  let gen = [];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const list = await MovieList.get(\"/get-movie-list\");\n        setMovies(list.data.data.info);\n        const genre = await MovieList.get(\"/get-genre\");\n        setGenre(genre.data);\n\n        const gen = await MovieList(\"/get-genre-list\");\n        setGenreName(gen.data);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"bg-white\">\n        <div className=\"max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8\">\n          <h2 className=\"text-3xl font-bold mb-2\">Genre</h2>\n\n          <div className=\"grid grid-cols-6 gap-6 mb-11\">\n            {genre &&\n              genre.map((genre, index) => {\n                return (\n                  <a\n                    key={index}\n                    // href={\"http://localhost:3000/video/\".concat(genreName?.videoid)}\n                    class=\"col-span-6 sm:col-span-2 p-6 max-w-sm bg-blue-200 rounded-lg border justify-center items-center border-gray-200 shadow-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\"\n                  >\n                    <h5 class=\"mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white \">\n                      {genre?.genre_name}\n                    </h5>\n                  </a>\n                );\n              })}\n          </div>\n\n          <h2 className=\"text-3xl font-bold mb-5 mt-10\">Movies</h2>\n\n          <div className=\"grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n            {movies &&\n              movies.map((movies) => {\n                return (\n                  <a\n                    key={movies.videoid}\n                    href={\"http://localhost:3000/video/\".concat(movies.videoid)}\n                    className=\"group\"\n                  >\n                    <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n                      <img\n                        src={movies.poster_link}\n                        className=\"w-full h-full object-center object-cover group-hover:opacity-75\"\n                      />\n                    </div>\n                    <h3 className=\"mt-4 text-lg text-gray-700 font-normal\">\n                      {movies.title}\n                    </h3>\n                    <p className=\"mt-1 text-4xl font-medium text-yellow-400\">\n                      {\"*\".repeat(movies.imdb_rating)}\n                    </p>\n                  </a>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n//http://localhost:3000/list\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Users\\WishList.js",["127","128"],[],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { FaHeartOutline } from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport MovieList from \"../../api/MovieList\";\n\nexport default function WishList(moveid) {\n  const { usrid } = useParams();\n  const { movid } = moveid;\n\n  const [wish, setWish] = useState(false);\n\n  const handleClick = async (e) => {\n    setWish(true);\n    e.preventDefault();\n    try {\n      const response = await MovieList.post(`/add-to-wishlist`, {\n        userid: usrid,\n        videoid: movid,\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div>\n      {/* <FaHeartOutline className=\" hover:text-red-500 \"/> */}\n\n      {wish ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-8 w-8\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path d=\"M0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84.02L256 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 .0003 232.4 .0003 190.9L0 190.9z\" />\n        </svg>\n      ) : (\n        <svg\n          onClick={(e) => {\n            handleClick(e);\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-8 w-8\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path d=\"M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z\" />\n        </svg>\n      )}\n    </div>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Users\\UserLogin.js",["129","130","131","132"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport MovieList from \"../../api/MovieList\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function UserLogin() {\n  const [email, setEmail] = useState();\n  const [passwd, setPasswd] = useState();\n  const { users, setUsers } = useContext(UserContext);\n\n  const [isError, setIsError] = useState(false);\n  const nav = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault(); // Prevent form from submitting/reloading\n\n    try {\n      const response = await MovieList.get(`/login-user/${email}`, {\n        withCredentials: true,\n      });\n      console.log(response);\n\n      setUsers(response);\n      alert(\"Login successful!\");\n      nav(\"/\");\n    } catch (err) {\n      console.log(err.message); // Log any error from backend\n      alert(\"Login failed. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex w-full min-h-screen justify-center items-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://img.icons8.com/external-flaticons-lineal-color-flat-icons/64/undefined/external-movie-movie-theater-flaticons-lineal-color-flat-icons-7.png\"\n              alt=\"Workflow\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n              Sign in to your account\n            </h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\"></p>\n          </div>\n          <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"passwd\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  id=\"passwd\"\n                  name=\"passwd\"\n                  type=\"password\"\n                  value={passwd}\n                  onChange={(e) => {\n                    setPasswd(e.target.value);\n                  }}\n                  autoComplete=\"passwd\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                />\n                <label\n                  htmlFor=\"remember-me\"\n                  className=\"ml-2 block text-sm text-gray-900\"\n                >\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a\n                  href=\"#\"\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                >\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                onClick={handleLogin}\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Sign in\n              </button>\n              <div className=\"mt-10\"></div>\n              {isError && (\n                <div\n                  class=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n                  role=\"alert\"\n                >\n                  <p class=\"font-bold\">Password</p>\n                  <p>Incorrect Password! Try again!</p>\n                </div>\n              )}\n              {/* {(\n                <div\n                  class=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4\"\n                  role=\"alert\"\n                >\n                  <p class=\"font-bold\">You have logged in</p>\n                </div>\n              )} */}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Movies\\VideoPlayer.js",["133","134","135","136","137","138"],[],"import React, { useContext, useState, useEffect } from \"react\";\nimport MovieList from \"../../api/MovieList\";\nimport { MovieContext } from \"../../context/MovieContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nexport default function VideoPlayer() {\n  const { id } = useParams();\n  const nav = useNavigate();\n\n  // const [movieid, setMovieid] = useState(id);\n\n  const { movies, setMovies } = useContext(MovieContext);\n  const [actors, setActors] = useState(\"\");\n  const [director, setDirector] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [userComments, setUserComments] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [genreid, setGenreid] = useState(\"\");\n\n  const [genreName, setGenreName] = useState(\"\");\n\n  const fetchData = async () => {\n    try {\n      const video = await MovieList.get(`/get-movie-list/${id}`);\n      setMovies(video.data);\n      setGenreid(movies?.data?.movie_title?.genreid);\n      const adetail = await MovieList.get(`/actor-details/${id}`);\n      setActors(adetail.data.info);\n      const ddetail = await MovieList.get(`/director-details/${id}`);\n      setDirector(ddetail.data.info);\n\n      const user = await MovieList.get(`/get-movie-comment/${id}`);\n      setUserComments(user.data.info);\n      console.log(genreid);\n\n      //console.log(movies?.data?.movie_title?.genreid);\n\n      const gen = await MovieList.get(`/get-genre/${genreid}`);\n      setGenreName(gen?.data);\n      console.log(genreName);\n\n      //console.log(video.data);\n    } catch (error) {\n      console.log(error.message);\n      //redirect to homepage\n    }\n  };\n\n  const addComment = async (e) => {\n    e.preventDefault();\n    console.log(movies);\n    try {\n      const user = await MovieList.post(\n        `/add-comments/${movies.data.movie_title.videoid}`,\n        {\n          name: firstname,\n          comments: comments,\n        }\n      );\n      window.location.reload();\n\n      console.log(user?.data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  //const style = { on: { color: \"#000\" }, off: { color: \"#111\" } };\n\n  useEffect(() => {\n    fetchData();\n\n    addComment();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen py-10\">\n      <div>\n        <iframe\n          width=\"1000\"\n          height=\"500\"\n          src={movies?.data?.movie_title?.link}\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></iframe>\n      </div>\n      <div className=\"my-10\">\n        <h1 className=\"font-bold text-4xl dark:text-black\">Movie Cast</h1>\n      </div>\n      <div className=\"flex gap-4\">\n        {actors &&\n          actors.map((actor) => {\n            return (\n              <div className=\"block p-6 max-w-sm bg-gray-700 rounded-lg border border-gray-200 shadow-md dark:border-gray-700 dark:bg-gray-700\">\n                <div key={actor?.movieid} class=\"flex items-center space-x-4 \">\n                  <img\n                    class=\"w-36 h-36 rounded-full\"\n                    src={actor?.aimg_link}\n                    alt=\"\"\n                  />\n\n                  <div className=\"space-y-1 font-medium dark:text-white\">\n                    <div className=\"text-white\">\n                      {actor?.fname.concat(\" \".concat(actor.lname))}\n                    </div>\n                    <div className=\"text-white\">Gender: {actor.gender}</div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"my-10\">\n        <h1 className=\"font-bold text-4xl dark:text-black\">Director</h1>\n      </div>\n      <div>\n        {director &&\n          director.map((director) => {\n            return (\n              <div className=\"block p-6 max-w-sm bg-gray-700 rounded-lg border border-gray-200 shadow-md dark:border-gray-700 dark:bg-gray-700\">\n                <div class=\"flex items-center space-x-4 \">\n                  <img\n                    class=\"w-36 h-36 rounded-full\"\n                    src={director?.dimg_link}\n                    alt=\"\"\n                  />\n                  <div class=\"space-y-1 font-medium dark:text-white \">\n                    <div className=\"text-white hover:text-white \">\n                      {director?.fname.concat(\" \".concat(director.lname))}\n                    </div>\n                    <div className=\"text-white hover:text-white \">\n                      Gender: {director?.gender}\n                    </div>\n                    <div className=\"text-white hover:text-white \">\n                      No Of Movies: {director?.no_of_movies}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <p className=\"py-10 font-bold text-3xl\">Movie Details</p>\n      <div>\n        <a\n          href=\"#\"\n          class=\"flex flex-col items-center w-max h-100 bg-gray-700 rounded-lg border shadow-md md:flex-col md:max-w-xl dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700\"\n        >\n          <img\n            class=\"object-cover w-full h-96 rounded-t-lg md:h-auto md:w-48 md:rounded-none md:rounded-l-lg pt-6\"\n            src={movies?.data?.movie_title?.poster_link}\n            alt=\"\"\n          />\n          <div class=\"flex flex-col justify-between p-4 leading-normal\">\n            <h5 class=\"mb-2 text-2xl font-bold tracking-tight text-white dark:text-white\">\n              {movies?.data?.movie_title?.title}\n            </h5>\n            <p class=\"mb-3 font-normal text-white dark:text-gray-400\">\n              {movies?.data?.movie_title?.movie_desc}\n            </p>\n            <div className=\"space-x-4 flex text-base\">\n              <p class=\"mb-1  font-normal text-5xl text-yellow-600\">\n                {\"*\".repeat(movies?.data?.movie_title?.imdb_rating)}\n              </p>\n              <p className=\"font-normal text-yellow-600 text-xl \">\n                {movies?.data?.movie_title?.imdb_rating}\n              </p>\n            </div>\n            <p className=\"text-white\">\n              Date of Release:{\" \"}\n              {movies?.data?.movie_title?.date_of_release.slice(0, 10)}\n            </p>\n            {<p className=\"text-white pt-3\">Genre: {genreName?.genre_name}</p>}\n          </div>\n        </a>\n      </div>\n      <div className=\"w-1/2\">\n        <p className=\"text-3xl py-10 font-bold text-center\">Add Comments</p>\n        <form\n          className=\"pt-4\"\n          onSubmit={(e) => {\n            addComment(e);\n          }}\n        >\n          <div class=\"w-full mb-4 bg-gray-50 rounded-lg border border-gray-200 dark:bg-gray-700 dark:border-gray-600\">\n            <div class=\"py-2 px-4 bg-white rounded-t-lg dark:bg-gray-800\">\n              <label for=\"comment\" class=\"sr-only\">\n                Your comment\n              </label>\n              <input\n                type=\"text\"\n                value={firstname}\n                class=\"px-0 w-full text-sm text-gray-900 bg-white border-0 dark:bg-gray-800 focus:ring-0 dark:text-white dark:placeholder-gray-400\"\n                placeholder=\"First Name\"\n                onChange={(e) => {\n                  setFirstname(e.target.value);\n                }}\n                required=\"\"\n              ></input>\n            </div>\n            <div class=\"py-2 px-4 bg-white rounded-t-lg dark:bg-gray-800\">\n              <label for=\"comment\" class=\"sr-only\">\n                Your comment\n              </label>\n              <textarea\n                id=\"comment\"\n                rows=\"4\"\n                value={comments}\n                onChange={(e) => {\n                  setComments(e.target.value);\n                }}\n                class=\"px-0 w-full text-sm text-gray-900 bg-white border-0 dark:bg-gray-800 focus:ring-0 dark:text-white dark:placeholder-gray-400\"\n                placeholder=\"Write a comment...\"\n                required=\"\"\n              ></textarea>\n            </div>\n            <div class=\"flex justify-between items-center py-2 px-3 border-t dark:border-gray-600\">\n              <button\n                type=\"submit\"\n                class=\"inline-flex items-center py-2.5 px-4 text-xs font-medium text-center text-white bg-blue-700 rounded-lg focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900 hover:bg-blue-800\"\n              >\n                Post comment\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <p className=\"text-3xl py-6 font-bold \">Comments</p>\n      <div class=\"w-1/2 bg-gray-700 rounded-lg border shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\">\n        <div class=\"grid mb-4\">\n          <ul role=\"list\" class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n            {userComments &&\n              userComments.map((userComments) => {\n                return (\n                  <li class=\"py-3 sm:py-4 \">\n                    <div class=\"items-baseline justify-between space-x-4\">\n                      <div class=\"flex-1 min-w-0\">\n                        <p class=\" text-xl font-medium text-white truncate dark:text-white\">\n                          {userComments?.username}\n                        </p>\n                      </div>\n                      <div class=\"\">\n                        <p class=\"text-white\">{userComments?.comment}</p>\n                      </div>\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Movies\\AddMovie.js",["139"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MovieList from \"../../api/MovieList\";\n\nexport default function AddMovie() {\n  const [title, setTitle] = useState(\"\");\n  const [rdate, setRdate] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [genreid, setGenreid] = useState(\"\");\n  const [posterLink, setPosterlink] = useState(\"\");\n  const [cnames, setCnames] = useState([]);\n  const [croles, setCroles] = useState([]);\n  const [cimgs, setCimgs] = useState([]);\n  const [cgenders, setCgenders] = useState([]);\n  const [dname, setDname] = useState(\"\");\n  const [dimg, setDimg] = useState(\"\");\n  const [dgender, setDgender] = useState(\"\");\n  const [dNumMovies, setDNumMovies] = useState();\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  {\n    /*Director table*/\n  }\n\n  const handleChanges = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await MovieList.post(\"/add-movie-list\", {\n        title: title,\n        date_of_release: rdate,\n        movie_desc: desc,\n        genreid: genreid,\n        poster_link: posterLink,\n        link: link,\n        imdb_rating: rating,\n        cnames,\n        cimgs,\n        croles,\n        cgenders,\n        dname,\n        dgender,\n        dimg,\n        dNumMovies,\n      });\n\n      console.log(response);\n      alert(\"success\");\n      navigate(\"/\");\n    } catch (error) {\n      setError(\"Failed to save movie as it might be a duplicate\");\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"min-h-full py-12 px-4 sm:px-6 lg:px-8\">\n        <form action=\"#\" method=\"POST\" onSubmit={handleChanges}>\n          <div className=\"shadow overflow-hidden sm:rounded-md\">\n            <div className=\"px-8 py-5 bg-white sm:p-6\">\n              <div className=\"grid grid-cols-6 gap-6\">\n                <div className=\"col-span-6 sm:col-span-6 lg:col-span-4\">\n                  <label\n                    htmlFor=\"title\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Movie Title\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    value={title}\n                    onChange={(e) => {\n                      setTitle(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-4 lg:col-span-2\">\n                  <label\n                    htmlFor=\"rdate\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Date Of Release\n                  </label>\n                  <input\n                    type=\"date\"\n                    name=\"rdate\"\n                    id=\"rdate\"\n                    value={rdate}\n                    onChange={(e) => {\n                      setRdate(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6\">\n                  <label\n                    htmlFor=\"link\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Movie Link\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"link\"\n                    id=\"link\"\n                    value={link}\n                    onChange={(e) => {\n                      setLink(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6\">\n                  <label\n                    htmlFor=\"posterLink\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Poster Link\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"posterLink\"\n                    id=\"posterLink\"\n                    value={posterLink}\n                    onChange={(e) => {\n                      setPosterlink(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6\">\n                  <label\n                    htmlFor=\"desc\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Movie Description\n                  </label>\n                  <textarea\n                    rows=\"4\"\n                    cols=\"50\"\n                    name=\"desc\"\n                    id=\"desc\"\n                    value={desc}\n                    onChange={(e) => {\n                      setDesc(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n\n                <div className=\"col-span-6 sm:col-span-3\">\n                  <lable\n                    htmlFor=\"rating\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    IMDB rating\n                  </lable>\n                  <input\n                    type=\"number\"\n                    name=\"rating\"\n                    value={rating}\n                    onChange={(e) => {\n                      setRating(e.target.value);\n                    }}\n                    id=\"rating\"\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Genre ID\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"genreid\"\n                    id=\"genreid\"\n                    value={genreid}\n                    onChange={(e) => {\n                      setGenreid(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                {/* Cast names */}\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-1 Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c1name\"\n                    id=\"c1name\"\n                    value={cnames[0]}\n                    onChange={(e) => {\n                      const updatedArray = [...cnames];\n                      updatedArray[0] = e.target.value;\n                      setCnames(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-1 Image\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c1img\"\n                    id=\"c1img\"\n                    value={cimgs[0]}\n                    onChange={(e) => {\n                      const updatedArray = [...cimgs];\n                      updatedArray[0] = e.target.value;\n                      setCimgs(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-1 Gender\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c1gender\"\n                    id=\"c1gender\"\n                    value={cgenders[0]}\n                    onChange={(e) => {\n                      const updatedArray = [...cgenders];\n                      updatedArray[0] = e.target.value;\n                      setCgenders(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-1 Role\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c1role\"\n                    id=\"c1role\"\n                    value={croles[0]}\n                    onChange={(e) => {\n                      const updatedArray = [...croles];\n                      updatedArray[0] = e.target.value;\n                      setCroles(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-2 Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c1name\"\n                    id=\"c1name\"\n                    value={cnames[1]}\n                    onChange={(e) => {\n                      const updatedArray = [...cnames];\n                      updatedArray[1] = e.target.value;\n                      setCnames(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-2 Image\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c2img\"\n                    id=\"c2img\"\n                    value={cimgs[1]}\n                    onChange={(e) => {\n                      const updatedArray = [...cimgs];\n                      updatedArray[1] = e.target.value;\n                      setCimgs(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-2 Gender\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c2gender\"\n                    id=\"c2gender\"\n                    value={cgenders[1]}\n                    onChange={(e) => {\n                      const updatedArray = [...cgenders];\n                      updatedArray[1] = e.target.value;\n                      setCgenders(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n                <div className=\"col-span-6 sm:col-span-3 \">\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Cast-2 Role\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"c1role\"\n                    id=\"c1role\"\n                    value={croles[1]}\n                    onChange={(e) => {\n                      const updatedArray = [...croles];\n                      updatedArray[1] = e.target.value;\n                      setCroles(updatedArray);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-span-6 sm:col-span-3 \">\n                <label\n                  htmlFor=\"postal-code\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Director name\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"dname\"\n                  id=\"dname\"\n                  value={dname}\n                  onChange={(e) => {\n                    setDname(e.target.value);\n                  }}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                />\n                <div>\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Director image link\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"dimglink\"\n                    id=\"dimglink\"\n                    value={dimg}\n                    onChange={(e) => {\n                      setDimg(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Director Gender\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"dgender\"\n                    id=\"dgender\"\n                    value={dgender}\n                    onChange={(e) => {\n                      setDgender(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n\n                  <label\n                    htmlFor=\"postal-code\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Number of movies directed\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"dnum\"\n                    id=\"dnum\"\n                    value={dNumMovies}\n                    onChange={(e) => {\n                      setDNumMovies(e.target.value);\n                    }}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outlin\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n              <button\n                type=\"submit\"\n                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Save\n              </button>\n            </div>\n\n            {error && <div className=\"text-red-500 text-lg bg-red-200 border-red-200 text-center p-3\">{error}</div>}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\components\\Users\\UserReg.js",["140","141"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MovieList from \"../../api/MovieList\";\n\nexport default function UserReg() {\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwd, setPasswd] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [phnum, setPhnum] = useState(\"\");\n  const [subid, setSubid] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleChange = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await MovieList.post(\"/register\", {\n        user_fname: fname,\n        user_lname:lname,\n        user_email: email,\n        user_passwd: passwd,\n        user_mobilenum: phnum,\n        user_country: country,\n        subid: 1,\n      });\n      console.log(response);\n      alert(\"success\");\n      navigate(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <div className=\"flex w-full min-h-screen justify-center items-center py-12 px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-md w-full space-y-8\">\n            <div>\n              <img\n                className=\"mx-auto h-12 w-auto\"\n                src=\"https://img.icons8.com/external-flaticons-lineal-color-flat-icons/64/undefined/external-movie-movie-theater-flaticons-lineal-color-flat-icons-7.png\"\n                alt=\"Workflow\"\n              />\n              <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n                Sign In to your account\n              </h2>\n            </div>\n            <form\n              className=\"mt-8 space-y-6\"\n              action=\"#\"\n              method=\"POST\"\n              onSubmit={handleChange}\n            >\n              <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n              <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                  <label htmlFor=\"fname\" className=\"sr-only\">\n                    First Name\n                  </label>\n                  <input\n                    id=\"fname\"\n                    name=\"fname\"\n                    type=\"text\"\n                    value={fname}\n                    onChange={(e) => {\n                      setFname(e.target.value);\n                    }}\n                    autoComplete=\"fname\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"First Name\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lname\" className=\"sr-only\">\n                    Last Name\n                  </label>\n                  <input\n                    id=\"lname\"\n                    name=\"lname\"\n                    type=\"text\"\n                    value={lname}\n                    onChange={(e) => {\n                      setLname(e.target.value);\n                    }}\n                    autoComplete=\"lname\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Last Name\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"counntry\" className=\"sr-only\">\n                    Country\n                  </label>\n                  <input\n                    id=\"country\"\n                    name=\"country\"\n                    type=\"text\"\n                    value={country}\n                    onChange={(e) => {\n                      setCountry(e.target.value);\n                    }}\n                    autoComplete=\"country\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Country\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"phnum\" className=\"sr-only\">\n                    Mobile Number\n                  </label>\n                  <input\n                    id=\"phnum\"\n                    name=\"phnum\"\n                    type=\"number\"\n                    value={phnum}\n                    onChange={(e) => {\n                      setPhnum(e.target.value);\n                    }}\n                    autoComplete=\"phnum\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Mobile Number\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"email\" className=\"sr-only\">\n                    Email address\n                  </label>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                    autoComplete=\"email\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Email address\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"sr-only\">\n                    Password\n                  </label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={passwd}\n                    onChange={(e) => {\n                      setPasswd(e.target.value);\n                    }}\n                    autoComplete=\"password\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n              </div>\n\n              {/* <div className=\"justify-center items-center\">\n                <h1>Subscription Option</h1>\n              </div> */}\n              {/* <div>\n                <select\n                  name=\"subid\"\n                  value={subid}\n                  onChange={(e) => {\n                    setSubid(e.target.value);\n                  }}\n                  className=\"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\"\n                  id=\"subid\"\n                >\n                  <option\n                    className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 focus:outline-none\"\n                    value={1}\n                  >\n                    Gold\n                  </option>\n                  <option\n                    className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 focus:outline-none\"\n                    value={2}\n                  >\n                    Premium\n                  </option>\n                  <option\n                    className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 focus:outline-none\"\n                    value={3}\n                  >\n                    Regular\n                  </option>\n                </select>\n              </div> */}\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Shivani\\Downloads\\React\\trailflix-master\\trailflix-master\\client\\src\\api\\MovieList.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":5,"column":1,"nodeType":"149","endLine":16,"endColumn":2},{"ruleId":"142","severity":1,"message":"150","line":1,"column":35,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"142","severity":1,"message":"151","line":7,"column":9,"nodeType":"144","messageId":"145","endLine":7,"endColumn":12},{"ruleId":"142","severity":1,"message":"152","line":9,"column":10,"nodeType":"144","messageId":"145","endLine":9,"endColumn":15},{"ruleId":"142","severity":1,"message":"153","line":12,"column":9,"nodeType":"144","messageId":"145","endLine":12,"endColumn":18},{"ruleId":"142","severity":1,"message":"154","line":14,"column":9,"nodeType":"144","messageId":"145","endLine":14,"endColumn":22},{"ruleId":"142","severity":1,"message":"155","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":19},{"ruleId":"142","severity":1,"message":"156","line":9,"column":7,"nodeType":"144","messageId":"145","endLine":9,"endColumn":8},{"ruleId":"142","severity":1,"message":"157","line":10,"column":7,"nodeType":"144","messageId":"145","endLine":10,"endColumn":10},{"ruleId":"158","severity":1,"message":"159","line":26,"column":6,"nodeType":"160","endLine":26,"endColumn":8,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":38,"column":19,"nodeType":"164","endLine":42,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":63,"column":23,"nodeType":"164","endLine":66,"endColumn":25},{"ruleId":"142","severity":1,"message":"167","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":24},{"ruleId":"142","severity":1,"message":"150","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":19},{"ruleId":"142","severity":1,"message":"150","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"168","line":9,"column":11,"nodeType":"144","messageId":"145","endLine":9,"endColumn":16},{"ruleId":"142","severity":1,"message":"169","line":11,"column":19,"nodeType":"144","messageId":"145","endLine":11,"endColumn":29},{"ruleId":"162","severity":1,"message":"170","line":105,"column":17,"nodeType":"164","endLine":108,"endColumn":18},{"ruleId":"142","severity":1,"message":"151","line":8,"column":9,"nodeType":"144","messageId":"145","endLine":8,"endColumn":12},{"ruleId":"142","severity":1,"message":"171","line":18,"column":10,"nodeType":"144","messageId":"145","endLine":18,"endColumn":14},{"ruleId":"142","severity":1,"message":"172","line":18,"column":16,"nodeType":"144","messageId":"145","endLine":18,"endColumn":23},{"ruleId":"158","severity":1,"message":"173","line":75,"column":6,"nodeType":"160","endLine":75,"endColumn":8,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"170","line":148,"column":9,"nodeType":"164","endLine":151,"endColumn":10},{"ruleId":"175","severity":1,"message":"176","line":234,"column":11,"nodeType":"164","endLine":234,"endColumn":81},{"ruleId":"177","severity":1,"message":"178","line":24,"column":3,"nodeType":"179","messageId":"180","endLine":26,"endColumn":4},{"ruleId":"142","severity":1,"message":"181","line":12,"column":10,"nodeType":"144","messageId":"145","endLine":12,"endColumn":15},{"ruleId":"142","severity":1,"message":"182","line":12,"column":17,"nodeType":"144","messageId":"145","endLine":12,"endColumn":25},"no-unused-vars","'SignUpPage' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'nav' is assigned a value but never used.","'error' is assigned a value but never used.","'buttonRef' is assigned a value but never used.","'togglePopover' is assigned a value but never used.","'genreName' is assigned a value but never used.","'i' is assigned a value but never used.","'gen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovies'. Either include it or remove the dependency array.","ArrayExpression",["183"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FaHeartOutline' is defined but never used.","'users' is assigned a value but never used.","'setIsError' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addComment' and 'fetchData'. Either include them or remove the dependency array.",["184"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'subid' is assigned a value but never used.","'setSubid' is assigned a value but never used.",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [setMovies]",{"range":"189","text":"190"},"Update the dependencies array to be: [addComment, fetchData]",{"range":"191","text":"192"},[828,830],"[setMovies]",[2220,2222],"[addComment, fetchData]"]